---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: monitoring
  labels:
    app: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: node-exporter
        image: quay.io/prometheus/node-exporter:v1.0.1
        args:
          - --path.rootfs=/host
          - --no-collector.arp
          - --no-collector.bcache
          - --no-collector.bonding
          - --no-collector.conntrack
          # --no-collector.cpu
          - --no-collector.cpufreq
          - --no-collector.diskstats
          - --no-collector.edac
          - --no-collector.entropy
          - --no-collector.filefd
          #- --no-collector.filesystem
          - --no-collector.hwmon
          - --no-collector.infiniband
          - --no-collector.ipvs
          - --no-collector.loadavg
          - --no-collector.mdadm
          #- --no-collector.meminfo
          - --no-collector.netclass
          - --no-collector.netdev
          - --no-collector.netstat
          - --no-collector.nfs
          - --no-collector.nfsd
          - --no-collector.pressure
          - --no-collector.rapl
          - --no-collector.schedstat
          - --no-collector.sockstat
          - --no-collector.softnet
          - --no-collector.stat
          - --no-collector.textfile
          - --no-collector.thermal_zone
          - --no-collector.time
          - --no-collector.timex
          - --no-collector.udp_queues
          - --no-collector.uname
          - --no-collector.vmstat
          - --no-collector.xfs
          - --no-collector.zfs
        ports:
        - name: metrics
          containerPort: 9100
        volumeMounts:
        - name: host
          mountPath: /host
      volumes:
      - name: host
        hostPath:
          path: /
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
{% if enable_persistence %}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 4Gi
  storageClassName: openebs-jiva-default
{% endif %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yaml: |
    global:
      scrape_interval: 10s
      scrape_timeout: 5s
      evaluation_interval: 1m
    scrape_configs:
    - job_name: 'node-exporter'
      kubernetes_sd_configs:
      - role: pod
      #
      # Exemple de suppression de Metric non utile
      #
      metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'node_cpu_guest_seconds_total'
        action: drop
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_controller_name,__meta_kubernetes_pod_container_port_number]
        action: keep
        regex: monitoring;node-exporter;9100
      #
      # Ajout auto du label node avec pour valeur le nom du host
      #
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: node
      scheme: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.20.0
        args:
          - --web.enable-lifecycle
          - --web.listen-address=0.0.0.0:9090
          - --web.enable-admin-api
          - --web.page-title=Agorakube-Prometheus
          - --storage.tsdb.path=/prometheus
          - --config.file=/etc/prometheus/prometheus.yaml
          - --storage.tsdb.retention.time=30d
        ports:
        - name: metrics
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
{% if enable_persistence %}
        - name: prometheus-data
          mountPath: /prometheus
      initContainers:
      - name: prometheus-data-set-permissions
        image: busybox:1.32.0
        command: ["/bin/chown","-R","65534:65534", "/prometheus"]
        volumeMounts:
        - name: prometheus-data
          mountPath: /prometheus
{% endif %}
      volumes:
      - name: prometheus-config
        configMap:
         name: prometheus-config
{% if enable_persistence %}
      - name: prometheus-data
        persistentVolumeClaim:
            claimName: prometheus-data
{% endif %}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:7.1.0
        ports:
        - containerPort: 3000
        env:
          - name: GF_SECURITY_ADMIN_USER
            value: "{{ dashboard_admin_user }}"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "{{ dashboard_admin_password }}"
          - name: GF_USERS_ALLOW_SIGN_UP
            value: "false"
        volumeMounts:
        - name: grafana-datasource
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboard
          mountPath: /etc/grafana/provisioning/dashboards
        resources:
      volumes:
      - name: grafana-datasource
        configMap:
         name: grafana-datasource
      - name: grafana-dashboard
        configMap:
         name: grafana-dashboard

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: monitoring
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus:9090
        basicAuth: false
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard
  namespace: monitoring
data:
  dashboard.yaml: |
    apiVersion: 1
    providers:
      - name: 'Prometheus'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        allowUiUpdates: true
        options:
          path: /etc/grafana/provisioning/dashboards
  node.json: |
{% raw %}
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Dashboard to monitor cluster nodes",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.0",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "100 - (avg by (node) (irate(node_cpu_seconds_total{job=\"node-exporter\",mode=\"idle\"}[5m])) * 100)",
              "interval": "",
              "legendFormat": "{{node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "CPU usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "%",
              "logBase": 1,
              "max": "100",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "hiddenSeries": false,
          "id": 2,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.0",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(avg by (node)(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)*0.000000001)",
              "interval": "",
              "legendFormat": "{{node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Memory Used (Go)",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": "Go",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "10s",
      "schemaVersion": 26,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "",
      "title": "Nodes",
      "uid": "c8_b4r7Gk",
      "version": 4
    }
{% endraw %}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
