---
- name: Verify if etcd cluster has successfully started
  command: >-
      /usr/bin/etcd-{{ etcd_release }}-linux-amd64/etcdctl member list -w=table
      --endpoints=https://127.0.0.1:2379
      --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key
  environment:
    ETCDCTL_API: 3
  changed_when: false
  register: etcd_memberlist
  until: etcd_memberlist.stdout.find("started") != -1
  retries: 5
  delay: 10
  run_once: true

- name: Show etcd member list
  debug:
    msg: "{{ etcd_memberlist.stdout_lines }}"
  run_once: true

- name: Verify etcd cluster health
  command: >-
      /usr/bin/etcd-{{ etcd_release }}-linux-amd64/etcdctl endpoint health -w=table
      --endpoints=https://127.0.0.1:2379
      --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key
  environment:
    ETCDCTL_API: 3
  changed_when: false
  register: etcd_clusterhealth
  until: etcd_clusterhealth.stdout.find("true") != -1
  retries: 5
  delay: 10

- name: Show etcd cluster health
  debug:
    msg: "{{ etcd_clusterhealth.stdout_lines }}"
  run_once: true

- name: Get etcd cluster status
  command: >-
      /usr/bin/etcd-{{ etcd_release }}-linux-amd64/etcdctl endpoint status -w=table
      --endpoints=https://127.0.0.1:2379
      --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key
  environment:
    ETCDCTL_API: 3
  changed_when: false
  register: etcd_clusterstatus

- name: Show etcd cluster status
  debug:
    msg: "{{ etcd_clusterstatus.stdout_lines }}"
  run_once: true
